[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "home-media-ai"
version = "0.1.0"
description = "AI-powered home media management and analysis toolkit"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Eric Wait", email = "ericwait@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Multimedia :: Video",
    "Topic :: Scientific/Engineering :: Image Processing",
]
keywords = ["media", "ai", "computer-vision", "image-processing", "video-analysis"]
requires-python = ">=3.8"
dependencies = [
    "opencv-python>=4.8.0",
    "Pillow>=10.0.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "sqlalchemy>=2.0.0",
    "click>=8.0.0",
    "tqdm>=4.65.0",
    "python-magic>=0.4.27",
    "exifread>=3.0.0",
    "scikit-image>=0.21.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
ml = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "transformers>=4.30.0",
    "face-recognition>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/ericwait/home-media-ai"
Repository = "https://github.com/ericwait/home-media-ai"
Issues = "https://github.com/ericwait/home-media-ai/issues"

[project.scripts]
home-media-ai = "home_media_ai.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["home_media_ai*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --disable-warnings"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]